common --enable_platform_specific_config
common --experimental_repository_cache_hardlinks

# specify python path for pyo3 compile
build:windows --action_env="PYTHON_SYS_EXECUTABLE=c:\\python\\python.exe"
#build:linux --action_env="PYTHON_SYS_EXECUTABLE=/usr/local/bin/python3.8"
#build:linux   --action_env="PYTHON_SYS_EXECUTABLE=/usr/local/python/bin/python3"
#build:linux  --action_env="PYTHON_SYS_EXECUTABLE=/usr/local/python/bin/python3"  --action_env="PYO3_PYTHON=python3.9"  --action_env="PYTHONTRACEMALLOC=25" --action_env="PYTHONMALLOCSTATS=1"

build:linux  --action_env="PYO3_PYTHON=/usr/local/python/bin/python3"  --action_env="PYTHONTRACEMALLOC=25" --action_env="PYTHONMALLOCSTATS=1"
#build:linux  --action_env="PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python" --action_env="PYO3_PYTHON=/usr/local/python39valgrindwithdebug/bin/python3.9" --action_env="PYTHONTRACEMALLOC=25" --action_env="PYTHONMALLOCSTATS=1"
#$ export DISPLAY=host.docker.internal:0
# export QTWEBENGINE_DISABLE_SANDBOX=1
# export XDG_RUNTIME_DIR=/tmp/runtime
#  export LIBGL_ALWAYS_INDIRECT=0

# should pass toolchains info to this env var?
#build:macos --action_env="PYTHON_SYS_EXECUTABLE=/Users/baojg/Downloads/code/cpython/python.exe"  --action_env="PYO3_PYTHON=/Users/baojg/Downloads/code/cpython/python.exe"
build:macos --action_env="PYTHON_SYS_EXECUTABLE=/Users/baojg/bin/python310/bin/python"  --action_env="PYO3_PYTHON=/Users/baojg/bin/python310/bin/python"
# runfiles are off by default on Windows, and we need them

# worker config
#build --@io_bazel_rules_rust//worker:use_worker=True
build:windows --worker_quit_after_buil

build --enable_runfiles

# skip the slow zip step on Windows, as we have symlinks
build:windows --build_python_zip=false

# record version/build hash
build --workspace_status_command='bash ./scripts/status.sh'

# run clippy when compiling rust in test mode
test --aspects=@io_bazel_rules_rust//rust:rust.bzl%rust_clippy_aspect --output_groups=+clippy_checks

# print output when test fails
test --test_output=errors

# don't add empty __init__.py files
build --incompatible_default_to_explicit_init_py

# faster for .ui file generation, but may sacrifice correctness
#--genrule_strategy=standalone

build:ci --show_timestamps --isatty=0 --color=yes --show_progress_rate_limit=5

try-import %workspace%/user.bazelrc
