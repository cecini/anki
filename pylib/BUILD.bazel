load("@rules_python//python:defs.bzl", "py_binary", "py_library", "py_test")
load("@py_deps//:requirements.bzl", "requirement")

py_test(
    name = "pytest",
    srcs = glob(["tests/*.py"]),
    data = glob(["tests/support/**"]),
    main = "tests/run_pytest.py",
    deps = [
        "//pylib/anki",
        requirement("pytest"),
    ],
)

py_test(
    name = "mypy",
    srcs = [
        "tests/run_mypy.py",
    ],
    args = [
        "anki",
        "$(location mypy.ini)",
    ],
    data = ["mypy.ini"],
    main = "tests/run_mypy.py",
    deps = [
        "//pylib/anki",
        requirement("typed-ast"),
        requirement("mypy"),
    ],
)

py_test(
    name = "pylint",
    srcs = [
        "tests/run_pylint.py",
    ],
    args = [
        "anki",
        "$(location .pylintrc)",
    ],
    data = [".pylintrc"],
    main = "tests/run_pylint.py",
    deps = [
        "//pylib/anki",
        requirement("typed-ast"),
        requirement("pylint"),
    ],
)

py_test(
    name = "format_check",
    srcs = [
        "//pylib/tools:py_source_files",
        "//pylib/anki:py_source_files",
    ] + glob([
        "tests/**/*.py",
    ]),
    args = [
        "$(location .isort.cfg)",
    ],
    data = [".isort.cfg"],
    main = "tests/run_format.py",
    # consum pip depend from the pip_import or pip_install
    deps = [
        requirement("typed-ast"),
        requirement("regex"),
        #requirement("git+https://github.com/psf/black.git@master#egg=black"),
        requirement("black"),
        requirement("isort"),
    ],
)

py_binary(
    name = "format",
    srcs = [
        "tests/run_format.py",
    ],
    args = [
        "$(location .isort.cfg)",
        "fix",
    ],
    data = [".isort.cfg"],
    main = "tests/run_format.py",
    tags = ["manual"],
    # consum pip depend from the pip_import or pip_install
    deps = [
        requirement("typed-ast"),
        requirement("regex"),
        requirement("black"),
        #requirement("git+https://github.com/psf/black.git@master#egg=black"),
        requirement("isort"),
    ],
)
