#!/bin/bash

set -e

run_linux() {
   # bazel run -s --verbose_explanations=true --verbose_failures=true //qt:runanki -- $*
    #PYTHON_SYS_EXECUTABLE=/usr/local/python/bin/python3 bazel run -s  --verbose_failures=true //qt:runanki -- $*
    #PYTHON_SYS_EXECUTABLE=/usr/local/python/bin/python3 bazel run -s --action_env PYTHON_SYS_EXECUTABLE=/usr/local/python/bin/python3  --verbose_failures=true //qt:runanki -- $*
    bazel run -s --sandbox_debug  --verbose_failures=true //qt:runanki -- $*
}

run_mac() {
    # QtWebEngineProcess is unable to locate icudtl.dat from a symlinked tree,
    # so we need to copy the files into a working folder before running on a Mac.
    workspace=$(dirname $0)
    export PATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:$PATH
    export https_proxy='http://192.168.1.227:1088' http_proxy='http://192.168.1.227:1088'
    #bazel build $BUILDARGS --sandbox_debug --verbose_failures  //qt:runanki && \
    #bazel --client_debug  build  --logging=6  --explain=/tmp/explain --experimental_workspace_rules_log_file=/tmp/workspacelog --build_event_text_file=/tmp/bep.txt -s $BUILDARGS --sandbox_debug --verbose_failures  //qt:runanki --execution_log_binary_file=/tmp/exec1.log  && \
    bazel --client_debug  build  --logging=0  --explain=/tmp/explain --verbose_explanations=true --experimental_workspace_rules_log_file=/tmp/workspacelog --build_event_text_file=/tmp/bep.txt -s $BUILDARGS --sandbox_debug --verbose_failures //qt:runanki --execution_log_binary_file=/tmp/exec1.log  && \
        rsync -aiL --exclude=anki/external --exclude=__pycache__ --delete \
            $workspace/bazel-bin/qt/runanki* $workspace/bazel-copy/ && \
        $workspace/bazel-copy/runanki $*
}

export PYTHONWARNINGS=default
if [[ "$OSTYPE" == "darwin"* ]]; then
    run_mac $*
else
    run_linux $*
fi
